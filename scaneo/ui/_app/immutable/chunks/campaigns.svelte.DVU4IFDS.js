import{p as l}from"./proxy.B3-__M_J.js";import{e as p,g as r,b as e}from"./runtime.B40kIuYm.js";import{b as _,f as $}from"./fetcher.CABHu9Eq.js";async function O(){const n=`${_.api_url}/_campaigns`;return $(n)}async function b(n){const f=`${_.api_url}/_campaigns/${n}`;return $(f)}const w=async n=>{const f=`${_.api_url}/_campaigns/${n}`;return $(f,"DELETE")};function N(){let n=p(l([])),f=p(!0),y=p(null),C=p(null),c=p(0),i=p(""),g=p(null),m=p(!1),d=p(!1),u=p(!1);const x=(t,s)=>{e(g,l(new WebSocket(`${_.api_url}/_campaigns/${s}`))),r(g).onmessage=a=>{const o=JSON.parse(a.data);o.status==="processing"?(e(c,l(parseFloat(o.progress))),e(i,l(o.message)),e(m,!0)):o.status==="complete"?(console.log("complete"),e(n,l([o.data,...r(n)])),e(c,1),e(i,"Campaign created"),e(m,!1),e(u,!0)):o.status==="error"&&(console.log("error"),console.log(o.error),e(c,1),e(i,"Error creating campaign"),e(m,!1),e(u,!1),alert(o.error))},r(g).onopen=()=>{e(c,0),e(i,"Creating campaign..."),e(m,!0),e(u,!1),r(g).send(JSON.stringify(t))}},E=t=>{e(g,l(new WebSocket(`${_.api_url}/_campaigns/${t}/export`))),r(g).onmessage=s=>{const a=JSON.parse(s.data);a.status==="exporting"?(e(c,l(parseFloat(a.progress))),e(i,l(a.message)),e(d,!0)):a.status==="complete"?(console.log("complete"),e(c,1),e(i,"Campaign exported"),e(d,!1),e(u,!0)):a.status==="error"&&(console.log("error"),console.log(a.error),e(c,1),e(i,"Error exporting campaign"),e(d,!1),e(u,!1),alert(a.error))},r(g).onopen=()=>{e(c,0),e(i,"Exporting campaign..."),e(d,!0),e(u,!1),r(g).send(JSON.stringify({}))}};return{get data(){return r(n)},get loading(){return r(f)},get error(){return r(y)},get current(){return r(C)},get progress(){return r(c)},get message(){return r(i)},get creating(){return r(m)},get exporting(){return r(d)},get completed(){return r(u)},reset:()=>{e(c,0),e(i,""),e(m,!1),e(d,!1),e(u,!1)},retrieve:async()=>{e(f,!0);const{data:t,error:s}=await O();s&&e(y,l(s.message)),e(n,l(t)),e(f,!1)},create:async(t,s,a,o,S)=>{x({name:t,description:s,path:a,labels:o,labelMappings:S},"create")},createEOTDL:async(t,s,a,o,S)=>{x({name:t,description:s,eotdlDatasetId:a,labels:o,labelMappings:S},"create-eotdl")},import:async(t,s,a)=>{x({name:t,description:s,path:a},"import")},cancel:()=>{r(g)&&r(g).readyState===WebSocket.OPEN&&(r(g).close(),e(i,"Cancelled"),e(c,0),e(m,!1),e(d,!1),e(u,!1))},delete:async t=>{const{data:s,error:a}=await w(t);a&&console.error(a),e(n,l(r(n).filter(o=>o.id!==t)))},retrieveOne:async t=>{const{data:s,error:a}=await b(t);a&&console.error(r(y)),e(C,l(s))},export:async t=>{E(t)}}}const k=N();export{k as c};
