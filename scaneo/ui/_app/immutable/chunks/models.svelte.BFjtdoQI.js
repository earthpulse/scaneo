import{h as p,aj as L,Y as y,ak as M,al as P,a7 as _,W as d,T as f}from"./runtime.B004VIJJ.js";import{p as i}from"./proxy.DjSrSXEw.js";import{f as l,P as u}from"./fetcher.BMDzGJ_8.js";let h=!1;function k(){h||(h=!0,document.addEventListener("reset",r=>{Promise.resolve().then(()=>{var e;if(!r.defaultPrevented)for(const t of r.target.elements)(e=t.__on_r)==null||e.call(t)})},{capture:!0}))}function U(r){if(p){var e=!1,t=()=>{if(!e){if(e=!0,r.hasAttribute("value")){var a=r.value;m(r,"value",null),r.value=a}if(r.hasAttribute("checked")){var s=r.checked;m(r,"checked",null),r.checked=s}}};r.__on_r=t,L(t),k()}}function m(r,e,t,a){var s=r.__attributes??(r.__attributes={});p&&(s[e]=r.getAttribute(e),e==="src"||e==="srcset"||e==="href"&&r.nodeName==="LINK")||s[e]!==(s[e]=t)&&(e==="loading"&&(r[M]=t),t==null?r.removeAttribute(e):typeof t!="string"&&E(r).includes(e)?r[e]=t:r.setAttribute(e,t))}var w=new Map;function E(r){var e=w.get(r.nodeName);if(e)return e;w.set(r.nodeName,e=[]);for(var t,a=y(r);a.constructor.name!=="Element";){t=P(a);for(var s in t)t[s].set&&e.push(s);a=y(a)}return e}async function O(r){let e=`${u}/_models`;return r&&(e+=`?campaign=${r}`),l(e)}async function T(r){const e=`${u}/_models/${r}`;return l(e)}const N=async(r,e,t,a,s,n)=>{const o=`${u}/_models`;return l(o,"POST",{name:r,description:e,url:t,task:a,preprocessing:s,postprocessing:n})},I=async r=>{const e=`${u}/_models/${r}`;return l(e,"DELETE")},S=async(r,e)=>{console.log(r,e);const t=`${u}/_models/inference/${r}`;return l(t,"POST",{image:e})};function x(){let r=_(i([])),e=_(!0),t=_(null),a=_(null);return{get data(){return d(r)},get loading(){return d(e)},get error(){return d(t)},get current(){return d(a)},retrieve:async(s=null)=>{f(e,!0);const{data:n,error:o}=await O(s);o&&f(t,i(o.message)),f(r,i(n)),f(e,!1)},create:async(s,n,o,c,$,A)=>{const{data:g,error:v}=await N(s,n,o,c,$,A);if(v)throw v;return f(r,i([g,...d(r)])),g},delete:async s=>{const{data:n,error:o}=await I(s);o&&console.error(o),f(r,i(d(r).filter(c=>c.id!==s)))},retrieveOne:async s=>{const{data:n,error:o}=await T(s);o&&console.error(d(t)),f(a,i(n))},inference:async(s,n)=>{const{data:o,error:c}=await S(s,n);if(c)throw new Error(c);return o}}}const Y=x();export{k as a,Y as m,U as r,m as s};
