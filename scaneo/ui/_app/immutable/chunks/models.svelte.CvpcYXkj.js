import{p as d}from"./proxy.B3-__M_J.js";import{e as y,g as c,b as l}from"./runtime.B40kIuYm.js";import{f as i,P as f}from"./fetcher.BMDzGJ_8.js";async function w(r){let e=`${f}/_models`;return r&&(e+=`?campaign=${r}`),i(e)}async function p(r){const e=`${f}/_models/${r}`;return i(e)}const b=async(r,e,a,u,n,o)=>{const t=`${f}/_models`;return i(t,"POST",{name:r,description:e,url:a,task:u,preprocessing:n,postprocessing:o})},M=async r=>{const e=`${f}/_models/${r}`;return i(e,"DELETE")},P=async(r,e)=>{console.log(r,e);const a=`${f}/_models/inference/${r}`;return i(a,"POST",{image:e})};function v(){let r=y(d([])),e=y(!0),a=y(null),u=y(null);return{get data(){return c(r)},get loading(){return c(e)},get error(){return c(a)},get current(){return c(u)},retrieve:async(n=null)=>{l(e,!0);const{data:o,error:t}=await w(n);t&&l(a,d(t.message)),l(r,d(o)),l(e,!1)},create:async(n,o,t,s,g,$)=>{const{data:_,error:m}=await b(n,o,t,s,g,$);if(m)throw m;return l(r,d([_,...c(r)])),_},delete:async n=>{const{data:o,error:t}=await M(n);t&&console.error(t),l(r,d(c(r).filter(s=>s.id!==n)))},retrieveOne:async n=>{const{data:o,error:t}=await p(n);t&&console.error(c(a)),l(u,d(o))},inference:async(n,o)=>{const{data:t,error:s}=await P(n,o);if(s)throw new Error(s);return t}}}const L=v();export{L as m};
